//环状数组二分查找#include <iostream>using namespace std;int CircleSearch(int data[], int len, int value){	if (len <1)     		return -1;	int low = 0, high = len - 1, mid;	while (low <= high)	{		mid = low + (high - low) / 2;		if (value == data[mid]) 			return mid;		if (value > data[mid])		{			if (data[mid] < data[0] && value >= data[0]) 				//如果当前搜索区间为二区，且它不是目标搜索区间				high = mid - 1;			else				low = mid + 1;		}		else		{			if (data[mid] > data[0] && value < data[0]) 				//如果当前搜索区间为二区，且它不是目标搜索区间				low = mid + 1;			else				high = mid - 1;		}	}	return -1;}//测试int main(){	int data[10] = { 1, 2, 3, 4, 5, -4, -3, -2, -1, 0 };	int index = CircleSearch(data, 10, -1);	if (index >= 0)		cout << "the index is : " << index << endl;	else		cout << "can not find!" << endl;	return 0;}